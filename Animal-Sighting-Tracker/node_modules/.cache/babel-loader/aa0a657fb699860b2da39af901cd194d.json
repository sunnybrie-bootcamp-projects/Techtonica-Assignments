{"ast":null,"code":"var _jsxFileName = \"/Users/tpl5_2021h1/Desktop/Techtonica/Repos/Techtonica-Assignments/Animal-Sighting-Tracker/src/components/SightingsBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport Sighting from \"./Sighting\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SightingsBoard() {\n  _s();\n\n  const [tableData, setTable] = useState([]);\n  const [needsUpdate, updateSwitch] = useState(false);\n  const [reducedTableData, setReduced] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      let res = await fetch(\"http://localhost:9000/sightings\");\n      let sightingResults = await res.json(); //console.log(sightingResults);\n\n      setTable(sightingResults);\n      setReduced(() => groupedSightings(sightingResults));\n    } catch (e) {\n      //alert(\"Error: Data not fetched!\", e);\n      console.log(\"Error: Data not fetched!\");\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n    updateSwitch(false);\n  }, [tableData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SightingsBoard\",\n    children: reducedTableData ? reducedTableData.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Sighting, {\n        date: item.date_time,\n        individuals: item.individuals,\n        location: item.location,\n        sighter_email: item.sighter_email\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Something went wrong... :c\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SightingsBoard, \"dp8UFaviXRjhb0YBdzIE3gQ9Xlw=\");\n\n_c = SightingsBoard;\nexport default SightingsBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SightingsBoard\");","map":{"version":3,"sources":["/Users/tpl5_2021h1/Desktop/Techtonica/Repos/Techtonica-Assignments/Animal-Sighting-Tracker/src/components/SightingsBoard.js"],"names":["React","useEffect","useState","useCallback","Sighting","SightingsBoard","tableData","setTable","needsUpdate","updateSwitch","reducedTableData","setReduced","fetchData","res","fetch","sightingResults","json","groupedSightings","e","console","log","map","item","index","date_time","individuals","location","sighter_email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,WAAD,EAAcC,YAAd,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACQ,gBAAD,EAAmBC,UAAnB,IAAiCT,QAAQ,CAAC,EAAD,CAA/C;;AAEA,QAAMU,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAArB;AACA,UAAIC,eAAe,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAA5B,CAFE,CAGF;;AAEAT,MAAAA,QAAQ,CAACQ,eAAD,CAAR;AACAJ,MAAAA,UAAU,CAAC,MAAMM,gBAAgB,CAACF,eAAD,CAAvB,CAAV;AACD,KAPD,CAOE,OAAOG,CAAP,EAAU;AACV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD;AACF,GAZD;;AAgBAnB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,SAAS;AACTH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHQ,EAGN,CAACH,SAAD,CAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cAEKI,gBAAgB,GACfA,gBAAgB,CAACW,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpC,0BAAO,QAAC,QAAD;AAEC,QAAA,IAAI,EAAED,IAAI,CAACE,SAFZ;AAGC,QAAA,WAAW,EAAEF,IAAI,CAACG,WAHnB;AAIC,QAAA,QAAQ,EAAEH,IAAI,CAACI,QAJhB;AAKC,QAAA,aAAa,EAAEJ,IAAI,CAACK;AALrB,SACMJ,KADN;AAAA;AAAA;AAAA;AAAA,cAAP;AAQD,KATD,CADe,gBAYf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdN;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA9CQlB,c;;KAAAA,c;AAgDT,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport Sighting from \"./Sighting\";\n\nfunction SightingsBoard() {\n  const [tableData, setTable] = useState([]);\n  const [needsUpdate, updateSwitch] = useState(false);\n  const [reducedTableData, setReduced] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      let res = await fetch(\"http://localhost:9000/sightings\");\n      let sightingResults = await res.json();\n      //console.log(sightingResults);\n\n      setTable(sightingResults);\n      setReduced(() => groupedSightings(sightingResults));\n    } catch (e) {\n      //alert(\"Error: Data not fetched!\", e);\n      console.log(\"Error: Data not fetched!\");\n    }\n  };\n\n  \n\n  useEffect(() => {\n    fetchData();\n    updateSwitch(false);\n  }, [tableData]);\n\n  return (\n    <div className=\"SightingsBoard\">\n      \n        {reducedTableData ? (\n          reducedTableData.map((item, index) => {\n            return <Sighting \n                    key={index} \n                    date={item.date_time} \n                    individuals={item.individuals}\n                    location={item.location} \n                    sighter_email={item.sighter_email} \n                    \n                    />;\n          })\n        ) : (\n          <p>Something went wrong... :c</p>\n          )}\n      \n    </div>\n  );\n}\n\nexport default SightingsBoard;\n"]},"metadata":{},"sourceType":"module"}