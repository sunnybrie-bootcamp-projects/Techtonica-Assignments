{"ast":null,"code":"var _jsxFileName = \"/Users/tpl5_2021h1/Desktop/Techtonica/Repos/Techtonica-Assignments/Animal-Sighting-Tracker/src/components/SightingsBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport Sighting from \"./Sighting\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SightingsBoard() {\n  _s();\n\n  const [tableData, setTable] = useState([]);\n  const [needsUpdate, updateSwitch] = useState(false);\n  const [reducedTableData, setReduced] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      let res = await fetch(\"http://localhost:9000/sightings\");\n      let sightingResults = await res.json(); //console.log(sightingResults);\n\n      setTable(sightingResults);\n      setReduced(() => groupedSightings(sightingResults));\n    } catch (e) {\n      //alert(\"Error: Data not fetched!\", e);\n      console.log(\"Error: Data not fetched!\");\n    }\n  };\n\n  const groupedSightings = origTable => {\n    let reduced = new Set(); //END GOAL: reduced = [[{},{},{}], [{}], [{}, {}],]\n\n    let idArr = new Set();\n    origTable.forEach(sighting => {\n      if (!idArr.has(sighting.sighting_id)) {\n        idArr.add(sighting.sighting_id);\n      }\n\n      ;\n    });\n    /*    function alreadyIncluded(id, compArr) {\n          if (compArr.size === 0) {\n            return false;\n          }\n          return compArr.filter((subArr) => subArr[0].species_id === id).length > 0;\n        }\n    */\n\n    idArr.forEach(idNum => {\n      reduced.add(origTable.filter(subSighting => {\n        return subSighting.sighting_id === idNum;\n      }));\n    });\n    console.log(`POST-FILTERED \"reduced\": `, reduced); //TEST\n    //reduce reduced's subarrays\n\n    function reduceFurther(sightingObj, indexObj) {\n      if (!(\"individuals\" in sightingObj)) {\n        sightingObj.individuals = [{\n          nickname: indexObj.nickname,\n          common_name: indexObj.common_name,\n          appeared_healthy: indexObj.appeared_healthy\n        }];\n      } else {\n        sightingObj.individuals.push({\n          nickname: indexObj.nickname,\n          common_name: indexObj.common_name,\n          appeared_healthy: indexObj.appeared_healthy\n        });\n      }\n\n      ;\n      return sightingObj;\n    }\n\n    let reducedMore = new Set();\n    reduced = reduced.forEach(sightings => {\n      let initialObject = {\n        date_time: sightings[0].date_time,\n        location: sightings[0].location,\n        sighter_email: sightings[0].sighter_email\n      };\n      reducedMore.add(sightings.reduce(reduceFurther, initialObject));\n    });\n    console.log(`POST REDUCED \"reducedMore\": `, reducedMore); //TEST\n\n    return reducedMore;\n  };\n\n  useEffect(() => {\n    fetchData();\n    updateSwitch(false);\n  }, [tableData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SightingsBoard\",\n    children: reducedTableData ? reducedTableData.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Sighting, {\n        date: item.date_time,\n        individuals: item.individuals,\n        location: item.location,\n        sighter_email: item.sighter_email\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 20\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Something went wrong... :c\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SightingsBoard, \"dp8UFaviXRjhb0YBdzIE3gQ9Xlw=\");\n\n_c = SightingsBoard;\nexport default SightingsBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SightingsBoard\");","map":{"version":3,"sources":["/Users/tpl5_2021h1/Desktop/Techtonica/Repos/Techtonica-Assignments/Animal-Sighting-Tracker/src/components/SightingsBoard.js"],"names":["React","useEffect","useState","useCallback","Sighting","SightingsBoard","tableData","setTable","needsUpdate","updateSwitch","reducedTableData","setReduced","fetchData","res","fetch","sightingResults","json","groupedSightings","e","console","log","origTable","reduced","Set","idArr","forEach","sighting","has","sighting_id","add","idNum","filter","subSighting","reduceFurther","sightingObj","indexObj","individuals","nickname","common_name","appeared_healthy","push","reducedMore","sightings","initialObject","date_time","location","sighter_email","reduce","map","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport Sighting from \"./Sighting\";\n\nfunction SightingsBoard() {\n  const [tableData, setTable] = useState([]);\n  const [needsUpdate, updateSwitch] = useState(false);\n  const [reducedTableData, setReduced] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      let res = await fetch(\"http://localhost:9000/sightings\");\n      let sightingResults = await res.json();\n      //console.log(sightingResults);\n\n      setTable(sightingResults);\n      setReduced(() => groupedSightings(sightingResults));\n    } catch (e) {\n      //alert(\"Error: Data not fetched!\", e);\n      console.log(\"Error: Data not fetched!\");\n    }\n  };\n\n  const groupedSightings = (origTable) => {\n    let reduced = new Set();\n    //END GOAL: reduced = [[{},{},{}], [{}], [{}, {}],]\n    let idArr = new Set();\n\n    origTable.forEach(sighting => {\n      if(!(idArr.has(sighting.sighting_id))){\n        idArr.add(sighting.sighting_id);\n      };\n    });\n\n/*    function alreadyIncluded(id, compArr) {\n      if (compArr.size === 0) {\n        return false;\n      }\n      return compArr.filter((subArr) => subArr[0].species_id === id).length > 0;\n    }\n*/\n    idArr.forEach((idNum) => {\n      \n        reduced.add(\n          origTable.filter((subSighting) => {\n            return subSighting.sighting_id === idNum;\n          })\n        );\n      });\n\n    console.log(`POST-FILTERED \"reduced\": `, reduced); //TEST\n\n    //reduce reduced's subarrays\n    function reduceFurther(sightingObj, indexObj) {\n      if(!(\"individuals\" in sightingObj)){\n        sightingObj.individuals = [{\n          nickname: indexObj.nickname,\n          common_name: indexObj.common_name,\n          appeared_healthy: indexObj.appeared_healthy,\n        }];\n      } else {\n        sightingObj.individuals.push({\n          nickname: indexObj.nickname,\n          common_name: indexObj.common_name,\n          appeared_healthy: indexObj.appeared_healthy,\n        });\n      };\n\n      return sightingObj;\n    }\n\n    let reducedMore = new Set();\n\n    reduced = reduced.forEach((sightings) => {\n      let initialObject = {\n        date_time: sightings[0].date_time,\n        location: sightings[0].location,\n        sighter_email: sightings[0].sighter_email,\n      };\n\n      reducedMore.add(sightings.reduce(reduceFurther, initialObject));\n    });\n\n    console.log(`POST REDUCED \"reducedMore\": `, reducedMore); //TEST\n    return reducedMore;\n  };\n\n  useEffect(() => {\n    fetchData();\n    updateSwitch(false);\n  }, [tableData]);\n\n  return (\n    <div className=\"SightingsBoard\">\n      \n        {reducedTableData ? (\n          reducedTableData.map((item, index) => {\n            return <Sighting \n                    key={index} \n                    date={item.date_time} \n                    individuals={item.individuals}\n                    location={item.location} \n                    sighter_email={item.sighter_email} \n                    \n                    />;\n          })\n        ) : (\n          <p>Something went wrong... :c</p>\n          )}\n      \n    </div>\n  );\n}\n\nexport default SightingsBoard;\n"]},"metadata":{},"sourceType":"module"}