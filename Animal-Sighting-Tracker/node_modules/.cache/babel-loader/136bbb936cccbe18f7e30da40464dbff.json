{"ast":null,"code":"var _jsxFileName = \"/Users/tpl5_2021h1/Desktop/Techtonica/Repos/Techtonica-Assignments/Animal-Sighting-Tracker/src/components/SightingsBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport Sighting from \"./Sighting\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SightingsBoard(props) {\n  _s();\n\n  const [tableData, setTable] = useState([]);\n  const [needsUpdate, updateSwitch] = useState(false);\n\n  const fetchData = async () => {\n    try {\n      let res = await fetch(\"http://localhost:9000/sightings\");\n      let sightingResults = await res.json(); //console.log(sightingResults);\n\n      setTable(sightingResults);\n    } catch (e) {\n      alert(\"Error: Data not fetched!\", e);\n      console.log(\"Error: Data not fetched!\");\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n    updateSwitch(false);\n  }, [tableData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tableData ? tableData.map(item => {\n        return /*#__PURE__*/_jsxDEV(Sighting, {\n          props: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 20\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Something went wrong... :c\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SightingsBoard, \"+ClqjeCdv6RkkKXEo50vWE70RnM=\");\n\n_c = SightingsBoard;\nexport default SightingsBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SightingsBoard\");","map":{"version":3,"sources":["/Users/tpl5_2021h1/Desktop/Techtonica/Repos/Techtonica-Assignments/Animal-Sighting-Tracker/src/components/SightingsBoard.js"],"names":["React","useEffect","useState","useCallback","Sighting","SightingsBoard","props","tableData","setTable","needsUpdate","updateSwitch","fetchData","res","fetch","sightingResults","json","e","alert","console","log","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC7B,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,WAAD,EAAcC,YAAd,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMS,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAArB;AACA,UAAIC,eAAe,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAA5B,CAFE,CAGF;;AAEAP,MAAAA,QAAQ,CAACM,eAAD,CAAR;AACD,KAND,CAME,OAAOE,CAAP,EAAU;AACVC,MAAAA,KAAK,CAAC,0BAAD,EAA6BD,CAA7B,CAAL;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD;AACF,GAXD;;AAaAlB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,SAAS;AACTD,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHQ,EAGN,CAACH,SAAD,CAHM,CAAT;AAKA,sBACE;AAAA,2BACE;AAAA,gBACGA,SAAS,GACRA,SAAS,CAACa,GAAV,CAAeC,IAAD,IAAU;AACtB,4BAAO,QAAC,QAAD;AAAsB,UAAA,KAAK,EAAEA;AAA7B,WAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,CADQ,gBAKR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAaD;;GAnCQjB,c;;KAAAA,c;AAqCT,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport Sighting from \"./Sighting\";\n\nfunction SightingsBoard(props) {\n  const [tableData, setTable] = useState([]);\n  const [needsUpdate, updateSwitch] = useState(false);\n\n  const fetchData = async () => {\n    try {\n      let res = await fetch(\"http://localhost:9000/sightings\");\n      let sightingResults = await res.json();\n      //console.log(sightingResults);\n\n      setTable(sightingResults);\n    } catch (e) {\n      alert(\"Error: Data not fetched!\", e);\n      console.log(\"Error: Data not fetched!\");\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n    updateSwitch(false);\n  }, [tableData]);\n\n  return (\n    <>\n      <ul>\n        {tableData ? (\n          tableData.map((item) => {\n            return <Sighting key={index} props={item} />;\n          })\n        ) : (\n          <p>Something went wrong... :c</p>\n          )}\n      </ul>\n    </>\n  );\n}\n\nexport default SightingsBoard;\n"]},"metadata":{},"sourceType":"module"}