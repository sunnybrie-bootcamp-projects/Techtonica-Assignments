[{"/Users/tpl5_2021h1/Desktop/Techtonica/Repos/Techtonica-Assignments/Animal-Sighting-Tracker/src/index.js":"1","/Users/tpl5_2021h1/Desktop/Techtonica/Repos/Techtonica-Assignments/Animal-Sighting-Tracker/src/App.js":"2","/Users/tpl5_2021h1/Desktop/Techtonica/Repos/Techtonica-Assignments/Animal-Sighting-Tracker/src/reportWebVitals.js":"3","/Users/tpl5_2021h1/Desktop/Techtonica/Repos/Techtonica-Assignments/Animal-Sighting-Tracker/src/components/SightingsBoard.js":"4","/Users/tpl5_2021h1/Desktop/Techtonica/Repos/Techtonica-Assignments/Animal-Sighting-Tracker/src/components/Sighting.js":"5","/Users/tpl5_2021h1/Desktop/Techtonica/Repos/Techtonica-Assignments/Animal-Sighting-Tracker/src/components/SightingAddForm.js":"6"},{"size":500,"mtime":1616459230548,"results":"7","hashOfConfig":"8"},{"size":278,"mtime":1616714228651,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1616459230549,"results":"10","hashOfConfig":"8"},{"size":1299,"mtime":1616778983662,"results":"11","hashOfConfig":"8"},{"size":1770,"mtime":1616703256472,"results":"12","hashOfConfig":"8"},{"size":4508,"mtime":1616716871009,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1jvc00m",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/tpl5_2021h1/Desktop/Techtonica/Repos/Techtonica-Assignments/Animal-Sighting-Tracker/src/index.js",[],["29","30"],"/Users/tpl5_2021h1/Desktop/Techtonica/Repos/Techtonica-Assignments/Animal-Sighting-Tracker/src/App.js",[],"/Users/tpl5_2021h1/Desktop/Techtonica/Repos/Techtonica-Assignments/Animal-Sighting-Tracker/src/reportWebVitals.js",[],"/Users/tpl5_2021h1/Desktop/Techtonica/Repos/Techtonica-Assignments/Animal-Sighting-Tracker/src/components/SightingsBoard.js",["31","32"],"import React, { useEffect, useState, useCallback } from \"react\";\nimport Sighting from \"./Sighting\";\nimport SightingAddForm from \"./SightingAddForm\";\n\nfunction SightingsBoard() {\n  const [tableData, setTable] = useState([]);\n  const [needsUpdate, updateSwitch] = useState(false);\n\n  const fetchData = async () => {\n    try {\n      let res = await fetch(\"http://localhost:9000/sightings\");\n      let sightingResults = await res.json();\n      //console.log(sightingResults);\n\n      setTable(sightingResults);\n    } catch (e) {\n      //alert(\"Error: Data not fetched!\", e);\n      console.log(\"Error: Data not fetched!\");\n    }\n  };\n\n  \n\n  useEffect(() => {\n    fetchData();\n    updateSwitch(false);\n  }, [tableData]);\n\n  return (\n    <div className=\"SightingsBoard\">\n      <h1>Recent Sightings</h1>\n      <SightingAddForm fetchData={() => fetchData} />\n      {tableData ? (\n        tableData.map((item, index) => {\n          return (\n            <Sighting\n              key={index}\n              date={item.date_time}\n              individuals={item.individuals}\n              location={item.location}\n              sighter_email={item.sighter_email}\n            />\n          );\n        })\n      ) : (\n        <p>Something went wrong... :c</p>\n      )}\n    </div>\n  );\n}\n\nexport default SightingsBoard;\n","/Users/tpl5_2021h1/Desktop/Techtonica/Repos/Techtonica-Assignments/Animal-Sighting-Tracker/src/components/Sighting.js",[],"/Users/tpl5_2021h1/Desktop/Techtonica/Repos/Techtonica-Assignments/Animal-Sighting-Tracker/src/components/SightingAddForm.js",["33","34"],"import React, { useEffect, useState } from \"react\";\n\n//Empty add form\nconst initialState = {\n  name: [\"\",],\n  appeared_healty: true,\n  location: \"Location Seen\",\n  email: \"example@mail.com\",\n  date: new Date(),\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"editDate\":\n      return { ...state, date: action.value };\n\n    case \"editName\":\n      return { ...state, name: action.value };\n\n    case \"editLocation\":\n      return { ...state, location: action.value };\n\n    case \"editHealth\":\n      return { ...state, appeared_healthy: action.value };\n\n    case \"editEmail\":\n      return { ...state, email: action.value };\n    case \"wipe\":\n      return { ...initialState };\n    default:\n      return state;\n  }\n}\n\n//ADD FORM, CHILD OF EVENTBOARD\nfunction SightingAddForm(props) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const [numSeen, plusMinus] = React.useState([\"\"]);\n\n  const onSubmitForm = async (e) => {\n    e.preventDefault();\n    try {\n      const body = state;\n      console.log(\"Attempting to post...\", JSON.stringify(body)); // TEST\n\n      const response = await fetch(\"http://localhost:9000/sightings\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n      response.catch((e) => {\n        console.log(`POST didn't send...`); //TEST\n      });\n\n      const update = await response.json();\n      console.log(`Server Response`, update); //TEST\n      window.alert(\"Report submitted!\");\n\n      props.fetchData();\n      dispatch({type: \"wipe\", value: {initialState}});\n\n      window.location = \"/\";\n\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"sightingSubmission\"\n        id=\"sightingSubmission\"\n        action=\"#sightingSubmission\"\n        onSubmit={onSubmitForm}\n      >\n        <div className=\"topper\">\n          <h2 className=\"tableTitle\">Report New Sighting</h2>\n        </div>\n        <label for=\"in-Date\">Date Seen:</label>\n        <input\n          id=\"in-Date\"\n          type=\"datetime-local\"\n          value={state.date}\n          onChange={(e) => {\n            dispatch({ type: \"editDate\", value: e.target.value });\n          }}\n        />\n        {numSeen.map((value, index) => {\n          return (\n            <>\n              <label key={index + 30} for=\"in-Name\">\n                Name:\n              </label>\n              <input\n                key={index + 31}\n                id=\"in-Name\"\n                type=\"text\"\n                value={state.name[index]}\n                onChange={(e) => {\n                  dispatch({\n                    type: \"editName\",\n                    value: numSeen.map((n, i) => {\n                      if (i === index) {\n                        return e.target.value;\n                      }\n\n                      return state.name[i];\n                    }),\n                    index: e.target.index,\n                  });\n                }}\n              />\n            </>\n          );\n        })}\n\n        <button onClick={() => plusMinus(numSeen.concat([\"\"]))}>\n          +\n        </button>\n        {numSeen.length > 1 ? (\n          <button\n            onClick={() =>\n              plusMinus(() => {\n                numSeen.splice(numSeen.length - 2, 1);\n                return numSeen;\n              })\n            }\n          >\n            -\n          </button>\n        ) : (\n          <> </>\n        )}\n\n        <label for=\"in-Health\"> Appeared Healthy? </label>\n        <div\n          id=\"in-Health\"\n          onChange={(e) => {\n            dispatch({ type: \"editHealth\", value: e.target.value });\n          }}\n        >\n          <input type=\"radio\" value={true} name=\"gender\" /> Yes\n          <input type=\"radio\" value={false} name=\"gender\" /> No\n        </div>\n\n        <label for=\"in-Location\">Location of Sighting:</label>\n        <input\n          id=\"in-Location\"\n          rows=\"10\"\n          cols=\"30\"\n          value={state.desc}\n          onChange={(e) => {\n            dispatch({ type: \"editLocation\", value: e.target.value });\n          }}\n        />\n\n        <label for=\"in-Email\">Your Email:</label>\n        <input\n          id=\"in-Email\"\n          type=\"text\"\n          value={state.Email}\n          onChange={(e) => {\n            dispatch({ type: \"editEmail\", value: e.target.value });\n          }}\n        />\n\n        <input id=\"submitSighting\" type=\"submit\" />\n      </form>\n    </>\n  );\n}\n\nexport default SightingAddForm;",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":38,"nodeType":"41","messageId":"42","endLine":1,"endColumn":49},{"ruleId":"39","severity":1,"message":"43","line":7,"column":10,"nodeType":"41","messageId":"42","endLine":7,"endColumn":21},{"ruleId":"39","severity":1,"message":"44","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":26},{"ruleId":"39","severity":1,"message":"45","line":1,"column":28,"nodeType":"41","messageId":"42","endLine":1,"endColumn":36},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'needsUpdate' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]